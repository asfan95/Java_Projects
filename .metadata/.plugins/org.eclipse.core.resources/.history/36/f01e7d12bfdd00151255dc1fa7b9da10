import java.awt.*;
import java.awt.event.*;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.WindowConstants;
/**
 * @author asfan
 *
 */
public class Main extends JFrame
{    
	Main()
	{
        //call the superclass constructor
        super();
       
        /*
         * Newly created window will not be displayed until we call
         * setVisible(true).
         */
		//setUndecorated(true);
	    setBounds(100, 100, 450, 300);
	    //the . is the transparent one(last var)
	    //setBackground(new Color(1.0f,1.0f,1.0f,0.9f));
		/*
		 * JButton.
		 */
//Add the button to the JFrame.
        this.setVisible(true);
	}
	private BufferedImage img;
	public void DisplayImage()
	{
		try{
			img=ImageIO.read(new File("exit.png"));
		}catch(IOException e){
			e.printStackTrace();
		}
	}
	public void keyPressed(KeyEvent event) {
	    switch (event.getKeyCode()) {
	        case KeyEvent.VK_UP:
	            System.out.println("goo");
	            break;
	        case KeyEvent.VK_DOWN:
	            // down arrow
	            break;
	        case KeyEvent.VK_RIGHT:
	            // right arrow
	            break;
	        case KeyEvent.VK_LEFT:
	            // left arrow
	            break;
	    }
	}
	public static void main(String[] args) 
	{
		
	    JFrame frame = new JFrame("My Window");
	    JPanel panel = new JPanel(null);
		   // Create a "clickable" image icon.
	    ImageIcon micIcon = new ImageIcon("mic.png");
	    ImageIcon searchIcon = new ImageIcon("search.png");
	    ImageIcon exitIcon = new ImageIcon("exit.png");
	    ImageIcon eggIcon = new ImageIcon("egg.png");
	    
	    JTextField search= new JTextField();

	    JLabel micLabel = new JLabel(micIcon);
	    JLabel searchLabel = new JLabel(searchIcon);
	    JLabel exitLabel = new JLabel(exitIcon);
	    JLabel eggLabel = new JLabel(eggIcon);
	    frame.addKeyListener(new KeyListener() {
	        @Override
	        public void keyTyped(KeyEvent e) 
	        {
	        }
	        @Override
	        public void keyPressed(KeyEvent e) 
	        {
	            System.out.println("Key pressed code=" + e.getKeyCode() + ", char=" + e.getKeyChar());

	            if(e.getKeyChar()=='B')
	            {
		            System.out.println("s, char=");
		            frame.setState(Frame.ICONIFIED);
	            }
	        }
	        @Override
	        public void keyReleased(KeyEvent e)
	        {
	        }
	    });
	    //-------------------------------------
	    //If SomeOne Clicked on the searchLabel
	    //-------------------------------------
	    searchLabel.addMouseListener(new MouseAdapter()
	    {
	    	public void mouseClicked(MouseEvent me) {
		    	  if(Desktop.isDesktopSupported())
		    	  {
		    	    try {
						Desktop.getDesktop().browse(new URI("http://www."+search.getText()+".com"));
					} catch (IOException | URISyntaxException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
		    	  }
		    	System.out.println(search.getText());
		      }
		    });
	    //-------------------------------------
	    //If SomeOne Clicked on the exitLabel
	    //-------------------------------------
	    exitLabel.addMouseListener(new MouseAdapter() 
	    {
	      public void mouseClicked(MouseEvent me) {
	        System.exit(0);
	      }
	    });

	    // Add it to a frame.
	    frame.setBounds(100, 100, 600, 450);
		frame.setUndecorated(true);
		frame.setBackground(new Color(1.0f,1.0f,1.0f,0.0f));
        frame.setAlwaysOnTop( true );

        eggLabel.setLocation(200, 50);
        search.setBounds(75,75,75,25);
        search.setLocation(250,250);
        panel.add(search);
        panel.add(eggLabel);
        panel.add(exitLabel);
        panel.add(micLabel);
        panel.add(searchLabel);
        search.setEnabled(false);
        exitLabel.setSize(50, 50);
        micLabel.setSize(50, 50);
        searchLabel.setSize(50, 50);
        exitLabel.setLocation(275, 300);
        searchLabel.setLocation(200, 300);
        micLabel.setLocation(350, 300);

        eggLabel.setSize(200, 200);

        panel.setOpaque(false);
        frame.getContentPane().add(panel);

	    frame.setVisible(true);
	}
}
